# Generated by Django 4.2.4 on 2023-10-15 12:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('tts_enabled', models.BooleanField()),
            ],
            options={
                'db_table': 'clients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sitename', models.CharField(max_length=128, unique=True)),
                ('internal_id', models.IntegerField()),
            ],
            options={
                'db_table': 'sites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sms', models.CharField(blank=True, max_length=255, null=True)),
                ('telegram', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(db_column='clientid', on_delete=django.db.models.deletion.CASCADE, to='adminpanel.clients')),
            ],
            options={
                'db_table': 'notifications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FilterWords',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('word', models.CharField(blank=True, max_length=255, null=True)),
                ('wordalias', models.CharField(blank=True, db_column='wordAlias', max_length=1022, null=True)),
                ('subwordalias', models.CharField(blank=True, max_length=255, null=True)),
                ('stopword', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(db_column='clientid', on_delete=django.db.models.deletion.CASCADE, to='adminpanel.clients')),
            ],
            options={
                'db_table': 'filterwords',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('insert_date', models.DateTimeField()),
                ('article_date', models.DateTimeField()),
                ('autor', models.CharField(blank=True, max_length=128, null=True)),
                ('url', models.CharField(max_length=1022)),
                ('article_name', models.TextField()),
                ('article_text', models.TextField()),
                ('visitors_count', models.IntegerField()),
                ('is_top_artikle', models.IntegerField()),
                ('screenshot_url', models.CharField(blank=True, max_length=90, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('found_word', models.CharField(blank=True, max_length=255, null=True)),
                ('clientid', models.ForeignKey(db_column='clientid', on_delete=django.db.models.deletion.CASCADE, to='adminpanel.clients')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpanel.sites')),
            ],
            options={
                'db_table': 'articles',
                'managed': True,
                'unique_together': {('url', 'clientid'), ('id', 'site')},
            },
        ),
    ]
